Question : Donner l'affichage produit sur la console pour chacune des exécutions suivantes, bien
comprendre ce qui se passe.

a) java TraceException 10 2

Debut du main
Debut de m2
Dans m2 avant appel de m1
Debut de m1
Fin de m1
Dans m2 apres appel de m1
Fin de m2
x = 5.0
Fin du main

--> Aucune erreur ici. Nos deux paramètre ne rentre dans aucun des cas d'exception défini : (10 2)
        if (y == 0)
            throw new E1("parametre de m1 null");
        if (x * y < 0)
            throw new E2("parametre de signe oppose a l'attribut");

b) java TraceException 10 -2

Debut du main
Debut de m2
Dans m2 avant appel de m1
Debut de m1
parametre de signe oppose a l'attribut
Fin de m2
x = 10.0
Fin du main

--> Dans le main, nous avons un appel à m2 sous la forme : te.m2(Double.parseDouble(args[1]));
    Le paramètre passé est donc args[1], le deuxième paramètre qui est égal à -2 (args[0] = 10, args[1] = -2);
    Notre méthode m2 fait un appel à m1 avec ce même paramètre : m1(y); Cela se passe dans le try de cette même fonction.
    Si on rentre dans m1, si x * y < 0, on throw une erreur de type E2 (throw new E2("parametre de signe oppose a l'attribut");
    La méthode m2 catch ensuite cette erreur et renvois un System.out.println(excpt.getMessage()) qui vient afficher l'erreur dans la console.
    L'exécution continue jusqu'à la fin.


c) java TraceException 10 0

Debut du main
Debut de m2
Dans m2 avant appel de m1
Debut de m1
Exception in thread "main" Exercice1.E1: parametre de m1 null
	at Exercice1.TraceException.m1(TraceException.java:17)
	at Exercice1.TraceException.m2(TraceException.java:28)
	at Exercice1.TraceException.main(TraceException.java:39)

--> Dans le main, nous avons un appel à m2 sous la forme : te.m2(Double.parseDouble(args[1]));
Le paramètre passé est donc args[1], le deuxième paramètre qui est égal à 0 (args[0] = 10, args[1] = 0);
Notre méthode m2 fait un appel à m1 avec ce même paramètre : m1(y); Cela se passe dans le try de cette même fonction.
Si on rentre dans m1, si le paramètre est égal à 0, on throw une erreur de type E1 (throw new E1("parametre de m1 null");
La méthode m2 throw ensuite cette erreur (définie dans la signature de la méthode)
Cette erreur n'est  pas catch par m2 (Elle ne catch que les Erreurs de types E2 ( } catch (E2 excpt) { ).
L'erreur est donc throw directement par le main, dans la console. L'exécution s'arrête

C'est utile lorsque qu'on doit vérifier l'exception (exception que l'on doit gérer) que l'on ne veut pas attraper dans notre méthode actuelle.